# Smart Animation

```elixir
Mix.install([
  {:smart_animation, path: "."},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Usage

```elixir

```

```elixir
SmartAnimation.new(fn x ->
  Kino.Markdown.new("This is animation frame #{x}")
end)
```

```elixir
SmartAnimation.new(1..10, fn x ->
  Kino.Markdown.new("This is animation frame #{x}")
end)
```

### Hidden Cell

We recommend using this project with [Hidden Cell](https://github.com/BrooklinJazz/hidden_cell) if you want to hide the code powering the animation.

<!-- livebook:{"attrs":{"source":"SmartAnimation.new(fn x ->\n  Kino.Markdown.new(\"This is animation frame #{x}\")\nend)","title":"Hidden Cell"},"kind":"Elixir.HiddenCell","livebook_object":"smart_cell"} -->

```elixir
SmartAnimation.new(fn x ->
  Kino.Markdown.new("This is animation frame #{x}")
end)
```

```elixir
defmodule Timer do
  use GenServer

  def start_link(opts) do
    GenServer.start_link(__MODULE__, [], opts)
  end

  def init(state) do
    {:ok, state}
  end

  def handle_info()
end

# :timer.send_interval(1000, :increment)
# :timer.start()
```
